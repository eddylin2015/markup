extends ./base.pug

block content
  style.
    .container{
      margin-left:10px;
    }
    table{width:100%;}
  script(src='/javascripts/cool/grid_export.js')
  -var fn= "CLASS_EVAL";
  -var act_link=`/internal/PublicAPI/ExpXls.php?charset=utf-8&filename=${fn}.xls`
  form(method="POST", enctype="multipart/form-data",action=act_link)#CSVFrmPOST
    .form-group.hidden
      input.form-control(type="text", name="CSVFrmPOSTNAME", id="CSVFrmPOSTVALUE")
  .btn-group
    a(href='#', class='btn btn-primary btn-sm')#exportbtn
      i.glyphicon.glyphicon-download-alt
      span  匯出Xls  

  table#tableContent.table
    tr
      th(width="100em;",padding="1em") ID
      th(width="100em;",padding="1em") 日期
      th(width="100em;",padding="1em") 節
      th(width="100em;",padding="1em") 科目
      th(width="100em;",padding="1em") 教師
      th(width="100em;",padding="1em") 班別 
      th(width="100em;",padding="1em") 地點
      th(width="100em;",padding="1em") 課堂狀況
      th(width="100em;",padding="1em") 學生學習表現
      th(width="100em;",padding="1em") 學生課堂秩序
      th(width="100em;",padding="1em") 學生課堂整潔
      th(width="100em;",padding="1em") 附註
      th(width="100em;",padding="1em") 睡覺同學
      th(width="100em;",padding="1em") 開小差同學
      th(width="100em;",padding="1em") 破坏課堂秩序同學
      th(width="100em;",padding="1em") 儀容違規
      th(width="100em;",padding="1em") 其他違規
      th(width="100em;",padding="1em") 其他違規同學
      th(width="100em;",padding="1em") 教學管理
      th(width="100em;",padding="1em") 教學器材充足
      th(width="100em;",padding="1em") 教學版書及資訊科技
      th(width="100em;",padding="1em") 師生互動
      th(width="100em;",padding="1em") 附註
      th(width="100em;",padding="1em") 需跟進事項
      th(width="100em;",padding="1em") 人員
      th(width="100em;",padding="1em") 記錄日期
      th(width="100em;",padding="1em") 標題
      th(width="100em;",padding="1em") 巡堂人員
    each book in books
      tr
        td= book.id
        td= book.ce_Date
        td= book.ce_SectNo
        td= book.ce_Subject
        td= book.ce_Teacher
        td= book.ce_CNo
        td= book.ce_Room
        td= book.ce_Status
        td= book.ce_StdPerform
        td= book.ce_CMStatus
        td= book.ce_CMTidy
        td= book.ce_CMNote
        td= book.ce_WrgSleep
        td= book.ce_WrgConcent 
        td= book.ce_WrgClOrder
        td= book.ce_WrgManner
        td= book.ce_WrgOtherDesc
        td= book.ce_WrgOther
        td= book.ce_TchTeach
        td= book.ce_TchMaterial
        td= book.ce_TchITWrit
        td= book.ce_TchCommu
        td= book.ce_TchNote
        td= book.ce_Note
        td= book.createdById
        td= book.logDate
        td= book.title
        td= book.ce_Mng
   

  if !books.length
    p No work log found.
  if cflag
    if nextPageToken
      nav
        ul.pager
          li
            a(href=`?pageToken=${encodeURIComponent(nextPageToken)}`) More

    
  script(type="text/javascript").
    $(document).ready(function(){
      $('#exportbtn').click(function(){
        var txt= document.getElementById('tableContent').innerHTML;
        document.getElementById('CSVFrmPOSTVALUE').value ="<table>"+ txt+"</table>";
        document.getElementById('CSVFrmPOST').submit();
      });
    });
    function sortTable(tdid) {
      var table, rows, switching, i, x, y, shouldSwitch;
      table = document.getElementById("tableContent");
      switching = true;
      while (switching) {
        switching = false;
        rows = table.rows;
        for (i = 1; i < (rows.length - 1); i++) {
          shouldSwitch = false;
          x = rows[i].getElementsByTagName("TD")[tdid];
          y = rows[i + 1].getElementsByTagName("TD")[tdid];
          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
            shouldSwitch = true;
            break;
          }
        }
        if (shouldSwitch) {
          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
          switching = true;
        }
      }
    }
    function sortTable1(tdid0,tdid1) {
      var table, rows, switching, i, x, y, shouldSwitch;
      table = document.getElementById("tableContent");
      switching = true;
      while (switching) {
        switching = false;
        rows = table.rows;
        for (i = 1; i < (rows.length - 1); i++) {
          shouldSwitch = false;
          x = rows[i].getElementsByTagName("TD")[tdid0].innerHTML+"_"+rows[i].getElementsByTagName("TD")[tdid1].innerHTML;
          y = rows[i + 1].getElementsByTagName("TD")[tdid0].innerHTML+"_"+rows[i + 1].getElementsByTagName("TD")[tdid1].innerHTML;
          if (x.toLowerCase() > y.toLowerCase()) {
            shouldSwitch = true;
            break;
          }
        }
        if (shouldSwitch) {
          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
          switching = true;
        }
      }
    }    
                      
